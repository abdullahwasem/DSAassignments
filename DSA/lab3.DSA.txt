#include <iostream>
using namespace std  ; 

  

template <class T>
class node  
{
  
  public :
  T data ;
  node<T> * next ;
  
};
  

  class linkylist 
  {
    public :
    node<T> * head ; 

  linkylist ()
  {
    head =  NULL ;
  }

  void insertinstart (T const val )
  {
      node<T> * headnode = new <T> (val); 
      headnode->next  = head ;
      head = headnode ;
  }
  

  void insertatend (T const val)
  {
    node<T> * temp = head ;

    while (temp != NULL)
    {
        temp = temp->next ;
   
    }
     
    node<T> * tailnode = new <T> (val) ;
    temp->next = tailnode ;
  }



void print ()
{
  
    node <T>* temp = head;
 
    while (temp != NULL) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}


bool searchingbazi(T const & val )
{
    node <T> * tempo = head ; 

    while (temp != NULL)
    {


  temp = temp->next ;
if ( temp->data==val)
{
    return true ; 
}
    }

}

   bool emptybazi()
   {
    if (head==NULL)
    {
        return true  ;
    }
    else {
        return false ;
        }
   }

   bool insertmarzise(T const & val1 , T const& val2)
   {
    node<T> * addit = new <T>(val1) ;
    node <T> *temp =head ;
    int c = 0 ; 
    while ( temp != NULL)
    {
        temp = temp->next ;
        if (temp ->data ==val2)
        {
            c= 1 ;
            break ;
        }
        
    }
     if ( c == 0)
     {
        return 0 ;
        cout<<"cant insert as data give isnt present \n" ;

     }

else if ( c== 1 )
{
    while (temp->data != val2) {
        temp = temp->next;
        if ( temp->data == val2)
        {
        addit->next = temp->next;
        temp->next = addit;
        }
    }
   
}

   }



void deleteall(T const & val)
{
    node<T> * temp = head ;

    node<T> * prev =head ; 
    node<T> * current =  head ; 

    prev = current ;
    current =  current->next ;
    while(temp!=NULL)
    {
        temp=temp->next ;
        if (temp->data == val)
        {
         prev->next = current->next ;
         cout<<"element found and deleted \n" ;
        }
    }

}








   

};














int main ()
{
    linkylist <int> bhaisahab ;
    bhaisahab->insertinstart(2) ;
  //     bhaisahab->insertinstart(6) ;
    //   bhaisahab->insertinstart(7) ;
      // bhaisahab->insertatend(9) ;
       //bhaisahab->insertinstart(7) ;
       //bhaisahab->insertinstart(8) ;
       
       //bhaisahab->insertinstart(9) ;
       //bhaisahab->deleteall(7);
       //bhaisahab->print() ;
       //bhaisahab->searchingbazi(2) ;
       //bhaisahab->searchingbazi(9) ;
       //bhaisahab->searchingbazi(10) ;

}
